generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String       @id @default(uuid())
  email              String       @unique
  password           String
  phoneNo            String       @unique
  failedLoginAttempt Int
  userType           UserType
  lockoutTime        DateTime?
  activeStatus       Boolean
  createdAt          DateTime
  updatedAt          DateTime
  isDeleted          Boolean
  accessToken        String
  slotBook           SlotBooking? @relation("SlotBookByUser")
  // role                 Role       @relation(fields: [roleId], references: [id])
}

model Event {
  id             String         @id @default(uuid())
  userId         String
  name           String
  description    String
  eventPlace     String
  eventType      EventType
  eventStart     DateTime       @db.Date
  eventEnd       DateTime       @db.Date
  deletedAt      DateTime
  createdAt      DateTime
  updatedAt      DateTime
  eventSetting   EventSetting?  @relation("EventSetting")
  weekDaysSlot   WeekDaysSlot[] @relation("WeekDaysSlot")
  slotBookEvent  SlotBooking[]  @relation("SlotBookEvent")
  eventSettingId String         @unique
}

model EventSetting {
  id                 String        @id @default(uuid())
  eventByID          Event         @relation("EventSetting", fields: [eventId], references: [id])
  eventId            String        @unique
  slotDuration       DateTime      @db.Time()
  slotBookingSetting SlotBooking[] @relation("SlotBookingSetting")
}

model WeekDaysSlot {
  id        String   @id @default(uuid())
  eventId   String
  day       Int
  startTime DateTime @db.Time()
  endTime   DateTime @db.Time()
  Event     Event    @relation("WeekDaysSlot", fields: [eventId], references: [id])
}

model SlotBooking {
  id               String       @id @default(uuid())
  eventByID        Event        @relation("SlotBookEvent", fields: [eventId], references: [id])
  eventId          String
  eventSettingById EventSetting @relation("SlotBookingSetting", fields: [eventSettingId], references: [id])
  eventSettingId   String
  user             User         @relation("SlotBookByUser", fields: [userId], references: [id])
  userId           String       @unique
  bookingDate      DateTime     @db.Date
  slotTime         DateTime     @db.Time()
  createdAt        DateTime
  updatedAt        DateTime
  deletedAt        DateTime
}

enum UserType {
  CUSTOMER
  ADMIN
}

enum EventType {
  ONE_TIME
  RECURING
}
